from typing import Any

from aiogram.enums import ParseMode
from aiogram.types import CallbackQuery
from aiogram_dialog import Window, Dialog, DialogManager, Data, ChatEvent, StartMode
from aiogram_dialog.widgets.input import TextInput
from aiogram_dialog.widgets.kbd import Row, Start, ManagedCheckbox, Next, Checkbox, Back, Cancel, Button
from aiogram_dialog.widgets.text import Const, Jinja

from services.trauma_point_service import register_eof_user
from states import TraumaPointRegister, TraumaPointWork, MainMenu

def get_pre_result() -> str:
    return 'test'

async def check_changed(event: ChatEvent, checkbox: ManagedCheckbox,
                        manager: DialogManager):
    print("Check status changed:", checkbox.is_checked())


async def main_process_result(start_data: Data, result: Any,
                              dialog_manager: DialogManager):
    print("We have result1:", result)


async def go_to_main(callback: CallbackQuery, button: Button,
                     dialog_manager: DialogManager):
    await dialog_manager.start(MainMenu.main_menu, mode=StartMode.RESET_STACK)


async def go_clicked(callback: CallbackQuery, button: Button,
                     dialog_manager: DialogManager):
    try:
        register_eof_user(callback, dialog_manager)
        await dialog_manager.start(TraumaPointWork.main_menu, mode=StartMode.RESET_STACK)
    except Exception as e:
        await callback.message.answer(text='–í—ã —É–∂–µ –±—ã–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã')
        await dialog_manager.start(TraumaPointWork.main_menu, mode=StartMode.RESET_STACK)


async def get_lastname(dialog_manager: DialogManager, **kwargs):
    return {
        "lastname": dialog_manager.find("lastname").get_value(),
        "firstname": dialog_manager.find("firstname").get_value(),
        "email": dialog_manager.find("email").get_value(),
        "institute": dialog_manager.find("institute").get_value(),
        "check_1": dialog_manager.find("check_1").is_checked(),
        "check_2": dialog_manager.find("check_2").is_checked(),
        "check_3": dialog_manager.find("check_3").is_checked(),
        "check_4": dialog_manager.find("check_4").is_checked(),
        "check_5": dialog_manager.find("check_5").is_checked(),
        "check_6": dialog_manager.find("check_6").is_checked(),
        "check_7": dialog_manager.find("check_7").is_checked(),
        "check_8": dialog_manager.find("check_8").is_checked(),
        "check_9": dialog_manager.find("check_9").is_checked(),

        "check_non_1": dialog_manager.find("check_non_1").is_checked(),
        "check_non_2": dialog_manager.find("check_non_2").is_checked(),
        "check_non_3": dialog_manager.find("check_non_3").is_checked(),
        "check_non_4": dialog_manager.find("check_non_4").is_checked(),
        "check_non_5": dialog_manager.find("check_non_5").is_checked(),
        "check_non_6": dialog_manager.find("check_non_6").is_checked(),
        "check_non_7": dialog_manager.find("check_non_7").is_checked(),
        "check_non_8": dialog_manager.find("check_non_8").is_checked(),

        "personal_request": dialog_manager.find("personal_request").get_value(),
    }


professional_interests = [
    '–í–∞–ª—å–≥—É—Å–Ω–∞—è –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏—è —Å—Ç–æ–ø—ã',
    '–ë–µ–∑–æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –ª–µ—á–µ–Ω–∏–µ —Å—É—Å—Ç–∞–≤–æ–≤',
    '–≠–Ω–¥–æ–ø—Ä–æ—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—Å—Ç–∞–≤–æ–≤',
    '–ê—Ä—Ç—Ä–æ—Å–∫–æ–ø–∏—è',
    '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç—Ä–∞–≤–º—ã',
    '–ö–∏—Å—Ç–µ–≤–∞—è —Ç–µ—Ä–∞–ø–∏—è',
    '–†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è –ø–æ—Å–ª–µ —Ç—Ä–∞–≤–º –∏–ª–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –æ–ø–æ—Ä–Ω–æ-–¥–≤–∏–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∞–ø–ø–∞—Ä–∞—Ç–∞',
    '–í–æ–µ–Ω–Ω–æ-–ø–æ–ª–µ–≤–∞—è —Ö–∏—Ä—É—Ä–≥–∏—è',
    '–†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è'
]

non_professional_interests = [
    '–ù–∞—É–∫–∞üî≠',
    '–°–ø–æ—Ä—Ç‚öΩ',
    '–û—Ö–æ—Ç–∞ –∏ —Ä—ã–±–∞–ª–∫–∞üêü',
    '–ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –∏ –º–æ—Ç–æ—Ü–∏–∫–ª—ãüõ∫',
    '–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æüë®‚Äçüíº',
    '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—èüë®‚ÄçÔ∏è',
    '–ò—Å–∫—É—Å—Å—Ç–≤–æ –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æüé®',
    '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏ü§ñ',
]

main_dialog = Dialog(
    Window(
        Jinja(f'<b>"Trauma-POINT"</b>üí¨ - —ç—Ç–æ —á–∞—Ç-–±–æ—Ç –¥–ª—è '
              f'–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤ —Ç—Ä–∞–≤–º–∞—Ç–æ–ª–æ–≥–æ–≤-–æ—Ä—Ç–æ–ø–µ–¥–æ–≤.\r\n'
              f'<b>"Trauma-POINT"</b> –ø–æ–º–æ–≥–∞–µ—Ç –±—ã—Å—Ç—Ä–æ –Ω–∞—Ö–æ–¥–∏—Ç—å '
              f'—Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –∏–ª–∏ '
              f'–ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—è—Ç–Ω—ã—Ö –±–µ—Å–µ–¥ –≤–æ –≤—Ä–µ–º—è –∫–æ—Ñ–µ-–±—Ä–µ–π–∫–æ–≤.\r\n'
              f'\r\n'
              f'<b>–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ –í–∞—à—É —Ñ–∞–º–∏–ª–∏—é</b>'),
        Button(Const(text="–ù–∞–∑–∞–¥"), id='to_main', on_click=go_to_main),
        TextInput(id="lastname", on_success=Next()),
        state=TraumaPointRegister.main_menu_input_lastname,
        parse_mode="html",
    ),
    Window(
        Const(f'–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è'),
        TextInput(id="firstname", on_success=Next()),
        Row(Back(Const("–ù–∞–∑–∞–¥"))),
        state=TraumaPointRegister.input_firstname,
    ),
    Window(
        Const(f'‚úâÔ∏è–í–≤–µ–¥–∏—Ç–µ –í–∞—à email'),
        TextInput(id="email", on_success=Next()),
        Row(Back(Const("–ù–∞–∑–∞–¥"))),
        state=TraumaPointRegister.input_email,
    ),
    Window(
        Const(f'üè¨–ò–∑ –∫–∞–∫–æ–≥–æ –í—ã —É—á—Ä–µ–∂–¥–µ–Ω–∏—è?'),
        TextInput(id="institute", on_success=Next()),
        Row(Back(Const("–ù–∞–∑–∞–¥"))),
        state=TraumaPointRegister.input_institute,
    ),
    Window(
        Const(f'–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à—É —Å—Ñ–µ—Ä—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤'),
        Row(
            Checkbox(
                Const(f'‚úÖ  {professional_interests[0]}'),
                Const(f'{professional_interests[0]}'),
                id="check_1",
                default=False,
                on_state_changed=check_changed,
            ),
            Checkbox(
                Const(f'‚úÖ  {professional_interests[1]}'),
                Const(f'{professional_interests[1]}'),
                id="check_2",
                default=False,
                on_state_changed=check_changed,
            ),
        ),
        Row(
            Checkbox(
                Const(f'‚úÖ  {professional_interests[2]}'),
                Const(f'{professional_interests[2]}'),
                id="check_3",
                default=False,
                on_state_changed=check_changed,
            ),
            Checkbox(
                Const(f'‚úÖ  {professional_interests[3]}'),
                Const(f'{professional_interests[3]}'),
                id="check_4",
                default=False,
                on_state_changed=check_changed,
            ), ),
        Row(
            Checkbox(
                Const(f'‚úÖ  {professional_interests[4]}'),
                Const(f'{professional_interests[4]}'),
                id="check_5",
                default=False,
                on_state_changed=check_changed,
            ),
            Checkbox(
                Const(f'‚úÖ  {professional_interests[5]}'),
                Const(f'{professional_interests[5]}'),
                id="check_6",
                default=False,
                on_state_changed=check_changed,
            ), ),
        Row(
            Checkbox(
                Const(f'‚úÖ  {professional_interests[6]}'),
                Const(f'{professional_interests[6]}'),
                id="check_7",
                default=False,
                on_state_changed=check_changed,
            ),
        ),
        Row(
            Checkbox(
                Const(f'‚úÖ  {professional_interests[7]}'),
                Const(f'{professional_interests[7]}'),
                id="check_8",
                default=False,
                on_state_changed=check_changed,
            ),
            Checkbox(
                Const(f'‚úÖ  {professional_interests[8]}'),
                Const(f'{professional_interests[8]}'),
                id="check_9",
                default=False,
                on_state_changed=check_changed,
            ),
        ),
        Row(
            Row(Back(Const("–ù–∞–∑–∞–¥"))),
            Next(Const('–î–∞–ª–µ–µ')),
        ),
        state=TraumaPointRegister.input_prof_interests,
    ),
    Window(
        Jinja(f'–ö–∞–∫–∏–µ —Ç–µ–º—ã –¥–ª—è <b>–Ω–µ–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ</b> –æ–±—â–µ–Ω–∏—è –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç?'),
        Row(
            Checkbox(
                Const(f'‚úÖ  {non_professional_interests[0]}'),
                Const(f'{non_professional_interests[0]}'),
                id="check_non_1",
                default=False,
                on_state_changed=check_changed,
            ),
            Checkbox(
                Const(f'‚úÖ  {non_professional_interests[1]}'),
                Const(f'{non_professional_interests[1]}'),
                id="check_non_2",
                default=False,
                on_state_changed=check_changed,
            ),

        ),
        Row(
            Checkbox(
                Const(f'‚úÖ  {non_professional_interests[2]}'),
                Const(f'{non_professional_interests[2]}'),
                id="check_non_3",
                default=False,
                on_state_changed=check_changed,
            ),
            Checkbox(
                Const(f'‚úÖ  {non_professional_interests[3]}'),
                Const(f'{non_professional_interests[3]}'),
                id="check_non_4",
                default=False,
                on_state_changed=check_changed,
            ), ),
        Row(
            Checkbox(
                Const(f'‚úÖ  {non_professional_interests[4]}'),
                Const(f'{non_professional_interests[4]}'),
                id="check_non_5",
                default=False,
                on_state_changed=check_changed,
            ),
            Checkbox(
                Const(f'‚úÖ  {non_professional_interests[5]}'),
                Const(f'{non_professional_interests[5]}'),
                id="check_non_6",
                default=False,
                on_state_changed=check_changed,
            ), ),
        Row(
            Checkbox(
                Const(f'‚úÖ  {non_professional_interests[6]}'),
                Const(f'{non_professional_interests[6]}'),
                id="check_non_7",
                default=False,
                on_state_changed=check_changed,
            ),
        ),
        Row(
            Checkbox(
                Const(f'‚úÖ  {non_professional_interests[7]}'),
                Const(f'{non_professional_interests[7]}'),
                id="check_non_8",
                default=False,
                on_state_changed=check_changed,
            ),
        ),
        Row(Back(Const("–ù–∞–∑–∞–¥")), Next(Const('–î–∞–ª–µ–µ'))),
        state=TraumaPointRegister.input_non_prof_interests,
        parse_mode=ParseMode.HTML,
    ),
    Window(
        Jinja(f'–ù–∞–ø–∏—à–∏—Ç–µ –ø–∞—Ä—É —Å–ª–æ–≤ –æ —Å–µ–±–µ'),
        TextInput(id="personal_request", on_success=Next()),
        Row(Back(Const("–ù–∞–∑–∞–¥")), Next(Const('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å, –ø—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∫–µ—Ç—ã'))),
        state=TraumaPointRegister.personal_request,
        parse_mode=ParseMode.HTML,
    ),
    Window(
        Jinja(
            f'<b>üßë‚Äçüíº–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞</b>:\n\n'
            '<b>–§–∞–º–∏–ª–∏—è</b>: {{lastname}}\n'
            '<b>–ò–º—è</b>: {{firstname}}\n'
            '<b>E-mail</b>: {{email}}\n'
            '<b>–£—á—Ä–µ–∂–¥–µ–Ω–∏–µ</b>: {{institute}}\n'
            '{% if check_1 == True %}<b>' + professional_interests[0] + '</b>\n {% endif %}' +
            '{% if check_2 == True %}<b>' + professional_interests[1] + '</b>\n {% endif %}' +
            '{% if check_3 == True %}<b>' + professional_interests[2] + '</b>\n {% endif %}' +
            '{% if check_4 == True %}<b>' + professional_interests[3] + '</b>\n {% endif %}' +
            '{% if check_5 == True %}<b>' + professional_interests[4] + '</b>\n {% endif %}' +
            '{% if check_6 == True %}<b>' + professional_interests[5] + '</b>\n {% endif %}' +
            '{% if check_7 == True %}<b>' + professional_interests[6] + '</b>\n {% endif %}' +
            '{% if check_8 == True %}<b>' + professional_interests[7] + '</b>\n {% endif %}' +
            '{% if check_9 == True %}<b>' + professional_interests[8] + '</b>\n {% endif %}' +

            '{% if check_non_1 == True %}<b>' + non_professional_interests[0] + '</b>\n {% endif %}' +
            '{% if check_non_2 == True %}<b>' + non_professional_interests[1] + '</b>\n {% endif %}' +
            '{% if check_non_3 == True %}<b>' + non_professional_interests[2] + '</b>\n {% endif %}' +
            '{% if check_non_4 == True %}<b>' + non_professional_interests[3] + '</b>\n {% endif %}' +
            '{% if check_non_5 == True %}<b>' + non_professional_interests[4] + '</b>\n {% endif %}' +
            '{% if check_non_6 == True %}<b>' + non_professional_interests[5] + '</b>\n {% endif %}' +
            '{% if check_non_7 == True %}<b>' + non_professional_interests[6] + '</b>\n {% endif %}' +
            '{% if check_non_8 == True %}<b>' + non_professional_interests[7] + '</b>\n {% endif %}' +
            # f'<b>{non_professional_interests[0]}''</b>: {{check_non_1}}\n'
            # f'<b>{non_professional_interests[1]}''</b>: {{check_non_2}}\n'
            # f'<b>{non_professional_interests[2]}''</b>: {{check_non_3}}\n'
            # f'<b>{non_professional_interests[3]}''</b>: {{check_non_4}}\n'
            # f'<b>{non_professional_interests[4]}''</b>: {{check_non_5}}\n'
            # f'<b>{non_professional_interests[5]}''</b>: {{check_non_6}}\n'
            # f'<b>{non_professional_interests[6]}''</b>: {{check_non_7}}\n'
            # f'<b>{non_professional_interests[7]}''</b>: {{check_non_8}}\n'
            '{% if personal_request != None %} <b>–û —Å–µ–±–µ:</b> {{personal_request}}\n {% endif %}'
        ),
        Back(Const('–ù–∞–∑–∞–¥')),
        Start(Const('–ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ'), id='start_chatting', state=TraumaPointWork.main_menu, on_click=go_clicked),
        state=TraumaPointRegister.result,
        getter=get_lastname,
        parse_mode="html",
    ),
    on_process_result=main_process_result
)
